"""
문제 :
- N*N 크기의 2차원 배열에서 입력받은 이동연산을 마친 결과
- 시작점 : 1,1
- 이동방향 : L,R,U,D
- 2차원 배열을 벗어난 이동은 무시
- 풀이 : 2차원 배열에서의 단순 이동을 위한 방향벡터 활용
"""
#입력
n = int(input()) #배열의 크기(행렬의 크기는 같다)
move = input().split() #이동계획표(L,R,U,D)

#풀이1. 방향에 따른 좌표이동을 배열로 표현
#인덱스가 동일하면 같은 이동으로 간주한다
dx = [-1,0,1,0]
dy = [0,1,0,-1]
directions = ['U','R','D','L']

x,y = 1,1 #시작점

#풀이2. 입력(move)에 따른 이동
#이동계획표만큼 반복하며, 내부에서 방향의 개수만큼 반복하여 서로 비교하여 동일한 방향으로 좌표이동
for m in move:
  for d in range(len(directions)):
    if m == directions[d]:
      if 1<=x+dx[d]<=n and 1<=y+dy[d]<=n:
        x += dx[d]
        y += dy[d]

#출력
print(f"{x} {y}")